package com.jwkj.activity;

import com.yoosee.R;
import com.jwkj.data.Contact;
import com.jwkj.global.Constants;
import com.jwkj.global.FList;
import com.jwkj.global.NpcCommon;
import com.jwkj.utils.T;
import com.jwkj.utils.UDPHelper;
import com.jwkj.widget.NormalDialog;
import com.mediatek.elian.ElianNative;

import android.content.Context;
import android.content.Intent;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.widget.ImageView;

public class AddWaitActicity extends BaseActivity implements OnClickListener {
	private ImageView ivBacke;
	private Context mContext;
	public Handler myhandler = new Handler();
	boolean isReceive = false;
	String ssid, pwd;

	Thread mThread = null;
	boolean mDone = true;
	public UDPHelper mHelper;
	byte type;
	int mLocalIp;
	ElianNative elain;
	WifiManager.MulticastLock lock;
	static {
		System.loadLibrary("elianjni");
	}
    @Override
    protected void onCreate(Bundle arg0) {
    	// TODO Auto-generated method stub
    	super.onCreate(arg0);
    	Window win = getWindow();
		  win.addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED
		  | WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
		  win.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
		  | WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    	setContentView(R.layout.activity_add_waite);
		mContext = this;
		WifiManager manager = (WifiManager) this.getSystemService(Context.WIFI_SERVICE);
	    lock= manager.createMulticastLock("localWifi");
		ssid = getIntent().getStringExtra("ssidname");
		pwd = getIntent().getStringExtra("wifiPwd");
		type=getIntent().getByteExtra("type",(byte) -1);
		mLocalIp = getIntent().getIntExtra("LocalIp", -1);	
		initUI();
		elain=new ElianNative(); 
		if (null != ssid && !"".equals(ssid)) {
              elain.InitSmartConnection(null, 1, 0);
              elain.StartSmartConnection(ssid, pwd,"",type);
              Log.e("wifi_mesg", "ssidname="+ssid+"--"+"wifipwd="+pwd+"--"+"type="+type);
		}
		lock.acquire();
		mHelper = new UDPHelper(9988);
		listen();
		myhandler.postDelayed(mrunnable, 90000);
		mHelper.StartListen();
    }
    private void initUI() {
		ivBacke = (ImageView) findViewById(R.id.img_back);
		ivBacke.setOnClickListener(this);
	}

	void listen() {
		   mHelper.setCallBack(new Handler() {

			@Override
			public void handleMessage(Message msg) {
				// TODO Auto-generated method stub
				switch (msg.what) {
				case UDPHelper.HANDLER_MESSAGE_BIND_ERROR:
					Log.e("my", "HANDLER_MESSAGE_BIND_ERROR");
					T.showShort(mContext, R.string.port_is_occupied);
					break;
				case UDPHelper.HANDLER_MESSAGE_RECEIVE_MSG:
					isReceive = true;
					Log.e("my", "HANDLER_MESSAGE_RECEIVE_MSG");
					// NormalDialog successdialog=new NormalDialog(mContext);
					// successdialog.successDialog();
					T.showShort(mContext, R.string.set_wifi_success);
				    mHelper.StopListen();
					Bundle bundle = msg.getData();
//					Contact saveContact=new Contact();
//                    saveContact=(Contact) bundle.getSerializable("saveContact");
//                    Intent add_device=new Intent(mContext,AddContactNextActivity.class);
//                    add_device.putExtra("saveContact", saveContact);
//                    add_device.putExtra("isCreatePassword", true);
//                    startActivity(add_device);
					
					Intent it=new Intent();
					it.setAction(Constants.Action.RADAR_SET_WIFI_SUCCESS);
					sendBroadcast(it);
					FList flist = FList.getInstance();
					flist.updateOnlineState();
					flist.searchLocalDevice();
					
					String contactId=bundle.getString("contactId");
					String frag=bundle.getString("frag");
					String ipFlag=bundle.getString("ipFlag");
					Contact saveContact=new Contact();
					saveContact.contactId=contactId;
					saveContact.activeUser=NpcCommon.mThreeNum;
					Intent add_device=new Intent(mContext,AddContactNextActivity.class);
                    add_device.putExtra("contact", saveContact);
                    if(Integer.parseInt(frag)==Constants.DeviceFlag.UNSET_PASSWORD){
                    	add_device.putExtra("isCreatePassword", true);
                    }else{
                    	add_device.putExtra("isCreatePassword", false);
                    }
                    add_device.putExtra("isfactory", true);
                    add_device.putExtra("ipFlag", ipFlag);
                    startActivity(add_device);
//					Intent modify = new Intent();
//					modify.setClass(mContext, LocalDeviceListActivity.class);
//					mContext.startActivity(modify);
					finish();
					break;
				}
			}

		});
	}

	public Runnable mrunnable = new Runnable() {

		@Override
		public void run() {
			if (!isReceive) {
				T.showShort(mContext, "设置wifi失败");
				Intent it=new Intent();
				it.setAction(Constants.Action.RADAR_SET_WIFI_FAILED);
				sendBroadcast(it);
				// 跳转
				finish();
			}
		}
	};
	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.img_back:
			finish();
			break;
		default:
			break;
		}
	}
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		myhandler.removeCallbacks(mrunnable);
		mHelper.StopListen();
		elain.StopSmartConnection();
		lock.release();
	}
	@Override
	public int getActivityInfo() {
		// TODO Auto-generated method stub
		return Constants.ActivityInfo.ACTIVITY_ADDWAITACTIVITY;
	}
	

}
